local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

-- Create a GUI (Graphical User Interface)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

-- Set GUI dimensions
local guiWidth = 280
local guiHeight = 200

-- Create a frame for the dark blue background with rounded corners
local backgroundFrame = Instance.new("Frame")
backgroundFrame.Size = UDim2.new(0, guiWidth, 0, guiHeight)
backgroundFrame.Position = UDim2.new(0.02, 0, 0.2, 0) -- Adjusted position to the left corner and center of the screen
backgroundFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 139) -- Dark blue
backgroundFrame.BorderSizePixel = 0
backgroundFrame.Parent = ScreenGui

-- Round the corners of the frame
local backgroundRound = Instance.new("UICorner")
backgroundRound.CornerRadius = UDim.new(0.1, 0)
backgroundRound.Parent = backgroundFrame

-- Create a TextBox to input the player's name
local textBox = Instance.new("TextBox")
textBox.PlaceholderText = "User here"
textBox.Size = UDim2.new(0.8, 0, 0.3, 0)
textBox.Position = UDim2.new(0.1, 0, 0.1, 0)
textBox.Font = Enum.Font.SourceSans
textBox.TextSize = 18
textBox.Parent = backgroundFrame
textBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- White
textBox.BorderSizePixel = 0
textBox.TextColor3 = Color3.fromRGB(0, 0, 0) -- Black
textBox.TextScaled = true
textBox.TextWrapped = true
textBox.TextXAlignment = Enum.TextXAlignment.Left
textBox.TextYAlignment = Enum.TextYAlignment.Top

-- Round the corners of the TextBox
local textRound = Instance.new("UICorner")
textRound.CornerRadius = UDim.new(0.1, 0)
textRound.Parent = textBox

-- Create a button to teleport
local teleportButton = Instance.new("TextButton")
teleportButton.Text = "Teleport"
teleportButton.Size = UDim2.new(0.4, 0, 0.2, 0)
teleportButton.Position = UDim2.new(0.1, 0, 0.5, 0)
teleportButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- White
teleportButton.BorderSizePixel = 0
teleportButton.Font = Enum.Font.SourceSans
teleportButton.TextSize = 18
teleportButton.Parent = backgroundFrame

-- Round the corners of the teleport button
local buttonRound = Instance.new("UICorner")
buttonRound.CornerRadius = UDim.new(0.1, 0)
buttonRound.Parent = teleportButton

-- Create a button to stop teleporting
local stopButton = Instance.new("TextButton")
stopButton.Text = "Stop"
stopButton.Size = UDim2.new(0.4, 0, 0.2, 0)
stopButton.Position = UDim2.new(0.5, 0, 0.5, 0)
stopButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- White
stopButton.BorderSizePixel = 0
stopButton.Font = Enum.Font.SourceSans
stopButton.TextSize = 18
stopButton.Parent = backgroundFrame

-- Round the corners of the stop button
local stopButtonRound = Instance.new("UICorner")
stopButtonRound.CornerRadius = UDim.new(0.1, 0)
stopButtonRound.Parent = stopButton

-- Create a text element to display the estimated distance
local distanceText = Instance.new("TextLabel")
distanceText.Text = ""
distanceText.Size = UDim2.new(0.8, 0, 0.2, 0)
distanceText.Position = UDim2.new(0.1, 0, 0.75, 0)
distanceText.BackgroundTransparency = 1
distanceText.Font = Enum.Font.SourceSans
distanceText.TextSize = 14
distanceText.TextColor3 = Color3.fromRGB(255, 255, 255) -- White
distanceText.Parent = backgroundFrame

-- Variables to hold the current tween and connection
local currentTween
local connection

-- Function to calculate and update the estimated distance
local function updateEstimatedDistance(character, targetPosition)
    local distance = (character.HumanoidRootPart.Position - targetPosition).magnitude
    distanceText.Text = "Distance to player: " .. math.floor(distance) .. " meters"
end

-- Function to teleport the player
local function teleportPlayer(playerName)
    local player = game.Players:FindFirstChild(playerName)
    if player then
        local character = game.Players.LocalPlayer.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            local targetPosition = player.Character.HumanoidRootPart.Position
            local distance = (character.HumanoidRootPart.Position - targetPosition).magnitude
            distanceText.Text = "Distance to player: " .. math.floor(distance) .. " meters"

            local tweenInfo = TweenInfo.new(distance / 200, Enum.EasingStyle.Linear)
            currentTween = TweenService:Create(character.HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(targetPosition)})
            currentTween:Play()

            -- Update the estimated distance while the player is moving
            connection = game:GetService("RunService").Stepped:Connect(function()
                updateEstimatedDistance(character, targetPosition)
            end)
        end
    else
        distanceText.Text = "Player not found."
    end
end

-- Teleport button click event
teleportButton.MouseButton1Click:Connect(function()
    local playerName = textBox.Text
    if playerName ~= "" then
        if currentTween then
            currentTween:Cancel()
            connection:Disconnect()
        end
        teleportPlayer(playerName)
    else
        distanceText.Text = "Please enter a player name."
    end
end)

-- Stop button click event
stopButton.MouseButton1Click:Connect(function()
    if currentTween then
        currentTween:Cancel()
        connection:Disconnect()
        distanceText.Text = "Teleport stopped."
    end
end)

loadstring(game:HttpGet("https://raw.githubusercontent.com/Usehsbd/PetriksESP/main/.gitignore"))()
-- Função para criar e exibir a interface
local function showInterface()
    local gui = Instance.new("ScreenGui")
    gui.Parent = game.Players.LocalPlayer.PlayerGui

    local frame = Instance.new("Frame")
    frame.Parent = gui
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.Position = UDim2.new(0, 0, 0, 0)
    frame.BackgroundColor3 = Color3.new(0, 0, 0)
    frame.BorderSizePixel = 0

    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = frame
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "Made by Petriks"
    textLabel.TextColor3 = Color3.fromRGB(0, 0, 255) -- Azul
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextSize = 40 -- Tamanho aumentado para 40
    textLabel.TextScaled = true -- Permite o redimensionamento automático do texto
    textLabel.TextWrapped = true -- Permite a quebra de linha

    wait(4)

    gui:Destroy()
end

-- Chamada da função para exibir a interface
showInterface()
